#include "../library/fact-macros.logic"

#define RecordMacro(ctx, heap, hctx) \
  HContext(hctx), \
  HContextFromRealHContext[InitialHeapValue[]] = hctx

#define RecordRefinedMacro(ctx, heap, hctx) \
  HContext(hctx), \
  HContextFromRealHContext[RealContext2FromContext[ctx]] = hctx


#define RecordImmutableMacro(ctx, heap, immCtx) \
  HContext(immCtx), \
  HContextFromRealHContext[ImmutableHeapValue[]] = immCtx


#define MergeMacro(callerCtx, invocation, hctx, heap, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[InitialHeapValue[], InitialHeapValue[]] = calleeCtx


#define MergeRefinedMacro(callerCtx, invocation, hctx, heap, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[RealHContextFromHContext[hctx], heap] = calleeCtx


// For this analysis, static calls use additionally the invocation site as a context.
#define MergeStaticMacro(callerCtx, invocation, calleeCtx) \
  Context(calleeCtx), \
  SpecialContextFromRealContext[RealContext1FromContext[callerCtx], invocation, \
                                RealContext2FromContext[callerCtx]] = calleeCtx

// MergeThreadStart, MergeStartup, and MergeFinalizerRegisterContext
// have the same logic as plain Merge for this analysis.
#define MergeThreadStartMacro(hctx, heap, callerCtx, newCtx) \
  Context(newCtx), \
  ContextFromRealContext[RealHContextFromHContext[hctx], heap] = newCtx

#define MergeStartupMacro(hctx, heap, calleeCtx) \
  Context(calleeCtx), \
  ContextFromRealContext[RealHContextFromHContext[hctx], heap] = calleeCtx

#define MergeFinalizerRegisterContextMacro(callerCtx, inmethod, heap, newCtx) \
  Context(newCtx), \
  ContextFromRealContext[RealContext2FromContext[callerCtx], heap] = newCtx
